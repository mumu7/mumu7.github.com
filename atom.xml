<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-16T06:59:08.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>li.wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java虚拟机运行时内存分区</title>
    <link href="http://yoursite.com/2017/08/16/java%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <id>http://yoursite.com/2017/08/16/java虚拟机/</id>
    <published>2017-08-16T06:00:00.000Z</published>
    <updated>2017-08-16T06:59:08.000Z</updated>
    
    <content type="html"><![CDATA[<hr>
<p>Java虚拟机在执行java程序的过程中会把它所管理的内存划分为若干个不同的数据区域，<br>主要包括：<strong>方法区、虚拟机栈、本地方法栈、堆、程序计数器</strong>。其中，java堆和方法区是<strong>线程共享的数据区</strong>，其他几个都属于<strong>线程私有的</strong>。</p>
<h4 id="程序计数器"><a href="#程序计数器" class="headerlink" title="程序计数器:"></a>程序计数器:</h4><p>程序计数器是一块较小的内存空间，它的作用可以看做是<strong>当前线程所执行的字节码的行号指示器</strong> ，字节码解释器的工作就是通过改变这个计数器的值来选取下一条需要执行的字节码指令，<strong>分支、循环、跳转、异常处理、线程恢复</strong>等基础功能都需要依赖这个计数器来完成。</p>
<p>如果线程正在执行的是java方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址；如果正在执行的是Native方法，这个计数器的值为空（undefined）<br>此内存区域是<strong>唯一一个</strong>在Java虚拟机规范中没有规定任何情况的<code>OutofMemoryError</code>区域</p>
<h4 id="Java虚拟机栈："><a href="#Java虚拟机栈：" class="headerlink" title="Java虚拟机栈："></a>Java虚拟机栈：</h4><p>虚拟机栈描述的是Java方法执行的内存模型，每个方法被执行的时候都会创建一个线帧，用于存储 <code>局部变量表、操作栈、动态链接、方法出口</code>等信息。每一个方法 被调用至执行完成的过程，就对应着一个线帧在虚拟机栈中从入栈到出栈的过程。</p>
<p>我们通常把Java内存区分为<code>堆内存和栈内存</code>。</p>
<blockquote>
<p>栈内存指的就是现在所讲的虚拟机栈，或者说是   虚拟机栈中局部  变量表部分.<br> 局部变量表所需的内存空间在编译期间完成分配。<br> 在方法运行期间不会改变局部变量表的大小<br> 在java虚拟机栈中，规定了两个异常，<code>StackOverflowError</code>和  <code>OutOfMemoryError</code>异常</p>
</blockquote>
<a id="more"></a>
<h4 id="本地方法栈："><a href="#本地方法栈：" class="headerlink" title="本地方法栈："></a>本地方法栈：</h4><p>本地方法栈和虚拟机栈所发挥的作用非常相似，<strong>区别在于虚拟机栈为虚拟机执行java方法，而本地方法栈则为虚拟机执行native方法</strong>。<br>有些虚拟机（如HotSpot）直接把本地方法栈和虚拟机栈合二为一</p>
<h4 id="java堆："><a href="#java堆：" class="headerlink" title="java堆："></a>java堆：</h4><blockquote>
<p>java堆是java虚拟机所管理的内存中<strong>最大的</strong>一块。<br>java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。在此内存区域的唯一目的就是存放对象实例，<strong>几乎所有的对象实例</strong>都在这里分配内存。<br>java堆是<strong>垃圾回收器管理的主要区域</strong>，因此很多时候被称为”GC堆”</p>
</blockquote>
<p>Java堆可以处于物理上不连续的内存空间，只要逻辑上连续的即可。在实现上，既可以实现固定大小的，也可以是扩展的。<br>由于现在收集器基本上都是采用分代收集算法，所以java堆中可以细分为：<code>新生代</code>和<code>老年代</code>。<br>在细致一点可以分为：Eden空间、 From Survivor空间、To Survivor空间等。<br>如果在堆中没有内存完成实例分配，并且堆也无法再扩展时，将会抛出<code>OutOfMemoryError</code>异常</p>
<h4 id="方法区："><a href="#方法区：" class="headerlink" title="方法区："></a>方法区：</h4><p>方法区与java堆类似，是各个线程共享的内存区域，它用于存储已<strong>被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码</strong>等数据<br>当方法区无法满足内存分配需求时，将会抛出<code>OutOfMemoryError</code>异常</p>
<h4 id="运行时常量池："><a href="#运行时常量池：" class="headerlink" title="运行时常量池："></a>运行时常量池：</h4><p>运行时常量是方法区的一部分。用于存放<strong>编译期生成的各种字面量和符号的引用</strong>，这部分内容将在类加载后 进入方法区的运行时常量池中存放。<br>除了保存class文件中描述的符号引用外，还会把<strong>翻译出来的直接引用</strong>也存储在运行时常量池。<br>运行常量池相对于class文件常量池的另一个重要特性是<strong>具备动态性</strong>.<br>java语言并不是要求常量一定在编译期产生，也就是说并非预置入class文件的常量池的内容才能进入运行常量池，运行期间也可以将新的常量放入池中。例如<code>String的intern()</code>方法<br>这部分会抛出<code>OutOfMemoryError</code>异常</p>
<h4 id="个人见解："><a href="#个人见解：" class="headerlink" title="个人见解："></a>个人见解：</h4><p><strong>程序计数器</strong>：存放当前线程所执行字节码的行号<br><strong>本地方法栈</strong>：作用与虚拟机栈类似，区别在于执行的为native方法<br><strong>java堆</strong>：存放对象实例<br><strong>方法区</strong>：存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据<br><strong>运行时候常量池</strong>：存放编译期生成的各种字面量和符号的引用和翻译出来的直接引用<br><strong>java虚拟机栈</strong>：描述Java方法执行的内存模型，存放存储局部变量表、操作栈、动态链接、方法出口等信息<br>局部变量表：存放编译期可知的各种基本数据类型（boolean、byte、char、short、int、float、long、double）、对象引用类型和returnAddress类型</p>
<p>《深入理解java虚拟机（第二版）》周志明 读书笔记<br>近期才开始写博客，有理解错误或者不完善的地方 可以发邮件给我，谢谢<br>wangli_it@163.com</p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;Java虚拟机在执行java程序的过程中会把它所管理的内存划分为若干个不同的数据区域，&lt;br&gt;主要包括：&lt;strong&gt;方法区、虚拟机栈、本地方法栈、堆、程序计数器&lt;/strong&gt;。其中，java堆和方法区是&lt;strong&gt;线程共享的数据区&lt;/strong&gt;，其他几个都属于&lt;strong&gt;线程私有的&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&quot;程序计数器&quot;&gt;&lt;a href=&quot;#程序计数器&quot; class=&quot;headerlink&quot; title=&quot;程序计数器:&quot;&gt;&lt;/a&gt;程序计数器:&lt;/h4&gt;&lt;p&gt;程序计数器是一块较小的内存空间，它的作用可以看做是&lt;strong&gt;当前线程所执行的字节码的行号指示器&lt;/strong&gt; ，字节码解释器的工作就是通过改变这个计数器的值来选取下一条需要执行的字节码指令，&lt;strong&gt;分支、循环、跳转、异常处理、线程恢复&lt;/strong&gt;等基础功能都需要依赖这个计数器来完成。&lt;/p&gt;
&lt;p&gt;如果线程正在执行的是java方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址；如果正在执行的是Native方法，这个计数器的值为空（undefined）&lt;br&gt;此内存区域是&lt;strong&gt;唯一一个&lt;/strong&gt;在Java虚拟机规范中没有规定任何情况的&lt;code&gt;OutofMemoryError&lt;/code&gt;区域&lt;/p&gt;
&lt;h4 id=&quot;Java虚拟机栈：&quot;&gt;&lt;a href=&quot;#Java虚拟机栈：&quot; class=&quot;headerlink&quot; title=&quot;Java虚拟机栈：&quot;&gt;&lt;/a&gt;Java虚拟机栈：&lt;/h4&gt;&lt;p&gt;虚拟机栈描述的是Java方法执行的内存模型，每个方法被执行的时候都会创建一个线帧，用于存储 &lt;code&gt;局部变量表、操作栈、动态链接、方法出口&lt;/code&gt;等信息。每一个方法 被调用至执行完成的过程，就对应着一个线帧在虚拟机栈中从入栈到出栈的过程。&lt;/p&gt;
&lt;p&gt;我们通常把Java内存区分为&lt;code&gt;堆内存和栈内存&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;栈内存指的就是现在所讲的虚拟机栈，或者说是   虚拟机栈中局部  变量表部分.&lt;br&gt; 局部变量表所需的内存空间在编译期间完成分配。&lt;br&gt; 在方法运行期间不会改变局部变量表的大小&lt;br&gt; 在java虚拟机栈中，规定了两个异常，&lt;code&gt;StackOverflowError&lt;/code&gt;和  &lt;code&gt;OutOfMemoryError&lt;/code&gt;异常&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="java,虚拟机" scheme="http://yoursite.com/tags/java-%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>跟阿铭学Linux 第三版</title>
    <link href="http://yoursite.com/2017/08/16/learn-linux-with-aming/"/>
    <id>http://yoursite.com/2017/08/16/learn-linux-with-aming/</id>
    <published>2017-08-16T01:00:00.000Z</published>
    <updated>2017-08-16T04:05:49.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="使用快捷键"><a href="#使用快捷键" class="headerlink" title="使用快捷键"></a>使用快捷键</h5><p><code>ctrl+c</code>:结束当前指令，如果你输入了一大串命令，但是并不想执行，就可以按下 Ctrl+c，光标会跳到下一行，并在刚刚结束的地方 打上一个 ^C的标记<br><code>Ctrl+D</code>:退出当前终端，也可以用 exit来退出<br><code>Ctrl+Z</code>:暂停当前进程，和Ctrl+C不一样，暂停后，可以用fg指令恢复该进程<br><code>Ctrl+L</code>:清屏，clear指令也有同样的功能<br><code>Ctrl+A</code>:可以让光标移动到命令的最前面（第一个字符）<br><code>Ctrl+E</code>:将光标移动到命令最后面</p>
<h5 id="查询帮助文档"><a href="#查询帮助文档" class="headerlink" title="查询帮助文档"></a>查询帮助文档</h5><p><code>man</code>： 用于查看命令的帮助文档 例：<code>man ls</code><br><code>ls</code>：列出当前目录下的目录和文件，不包含隐藏文件<br><code>ls -a</code>：列出当目录下的所有文件和目录，包含隐藏文件<br><code>ls -l</code>：列出当前目录下出隐藏文件外的所有文件和目录，包含 权限、所属主、所属组及文件创建时间<br><code>ls [文件名]</code>：会列出指定目录下的文件和目录</p>
<a id="more"></a>
<p>#####linux下重要的系统目录<br><code>/etc</code>：存放系统的配置文件，如果更改了该目录下得某个文件，可能导致系统无法正常启动<br><code>/bin和/usr/bin</code>：存放供除root外的普通用户使用的指令<br><code>/sbin和/usr/sbin</code>：是供root用户使用的指令<br><code>/var</code>：也是一个重要的目录，系统上运行各个程序所产生的日志都记录在该目录下(/var/log) 。mail指令的预设也放置在这里</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;使用快捷键&quot;&gt;&lt;a href=&quot;#使用快捷键&quot; class=&quot;headerlink&quot; title=&quot;使用快捷键&quot;&gt;&lt;/a&gt;使用快捷键&lt;/h5&gt;&lt;p&gt;&lt;code&gt;ctrl+c&lt;/code&gt;:结束当前指令，如果你输入了一大串命令，但是并不想执行，就可以按下 Ctrl+c，光标会跳到下一行，并在刚刚结束的地方 打上一个 ^C的标记&lt;br&gt;&lt;code&gt;Ctrl+D&lt;/code&gt;:退出当前终端，也可以用 exit来退出&lt;br&gt;&lt;code&gt;Ctrl+Z&lt;/code&gt;:暂停当前进程，和Ctrl+C不一样，暂停后，可以用fg指令恢复该进程&lt;br&gt;&lt;code&gt;Ctrl+L&lt;/code&gt;:清屏，clear指令也有同样的功能&lt;br&gt;&lt;code&gt;Ctrl+A&lt;/code&gt;:可以让光标移动到命令的最前面（第一个字符）&lt;br&gt;&lt;code&gt;Ctrl+E&lt;/code&gt;:将光标移动到命令最后面&lt;/p&gt;
&lt;h5 id=&quot;查询帮助文档&quot;&gt;&lt;a href=&quot;#查询帮助文档&quot; class=&quot;headerlink&quot; title=&quot;查询帮助文档&quot;&gt;&lt;/a&gt;查询帮助文档&lt;/h5&gt;&lt;p&gt;&lt;code&gt;man&lt;/code&gt;： 用于查看命令的帮助文档 例：&lt;code&gt;man ls&lt;/code&gt;&lt;br&gt;&lt;code&gt;ls&lt;/code&gt;：列出当前目录下的目录和文件，不包含隐藏文件&lt;br&gt;&lt;code&gt;ls -a&lt;/code&gt;：列出当目录下的所有文件和目录，包含隐藏文件&lt;br&gt;&lt;code&gt;ls -l&lt;/code&gt;：列出当前目录下出隐藏文件外的所有文件和目录，包含 权限、所属主、所属组及文件创建时间&lt;br&gt;&lt;code&gt;ls [文件名]&lt;/code&gt;：会列出指定目录下的文件和目录&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux,阿铭" scheme="http://yoursite.com/tags/linux-%E9%98%BF%E9%93%AD/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/08/15/hello-world/"/>
    <id>http://yoursite.com/2017/08/15/hello-world/</id>
    <published>2017-08-15T14:34:10.000Z</published>
    <updated>2017-08-16T04:05:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo generate&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
